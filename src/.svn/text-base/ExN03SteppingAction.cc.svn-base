#include "ExN03SteppingAction.hh"

#include "ExN03DetectorConstruction.hh"
#include "ExN03EventAction.hh"

#include "G4Step.hh"
#include "G4Track.hh"
#include "G4VProcess.hh"
#include "G4TrackVector.hh"


ExN03SteppingAction::ExN03SteppingAction(ExN03DetectorConstruction* det,
                                         ExN03EventAction* evt)
:detector(det), eventaction(evt)					 
{ }



ExN03SteppingAction::~ExN03SteppingAction()
{ }



void ExN03SteppingAction::UserSteppingAction(const G4Step* aStep)
{
  G4VPhysicalVolume* volume = aStep->GetPreStepPoint()->GetTouchableHandle()->GetVolume();
  const G4Track* track = aStep->GetTrack();
  const G4VProcess* pr = track->GetCreatorProcess();
  
  G4String pN = track->GetDefinition()->GetParticleName();
  G4double edep = aStep->GetTotalEnergyDeposit();


  if(track->GetParentID()==0) {//primary
   G4double x[3];
   x[0] = track->GetVertexPosition().x()/mm;
   x[1] = track->GetVertexPosition().y()/mm;
   x[2] = track->GetVertexPosition().z()/mm;
   eventaction->SetX0(x);
   if(track->GetCurrentStepNumber()==1) {
    G4double E0 = (track->GetVertexKineticEnergy())/MeV;
    eventaction->SetE0(E0);
   };
  }; 

  
  if(pr)
  {
   const G4String proc = pr->GetProcessName();
   //only store "interesting" processes
   if( (!strcmp(proc.data(),"NeutronInelastic"))||(!strcmp(proc.data(),"nCapture")) ) {
    if(track->GetCurrentStepNumber()==1) {
     G4double ke = track->GetVertexKineticEnergy()/MeV;
     eventaction->AddProc(proc);
     eventaction->AddEstep(ke);//not really, but would do for now
     eventaction->AddPname(pN);
    };
   };
  };
 
       
  if (volume == detector->GetCylinder()) eventaction->AddCyl(edep);
  for(int i=0;i<4;++i) {
   if(volume == detector->GetHole(i)) eventaction->AddVol(edep,i*3);
   if(volume == detector->GetTube(i)) eventaction->AddVol(edep,i*3+1);
   if(volume == detector->GetCounter(i)) eventaction->AddVol(edep,i*3+2);
  };
  
  
}


